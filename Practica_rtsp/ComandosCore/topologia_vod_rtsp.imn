node n2 {
    type router
    model PC
    network-config {
	hostname client
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {616.0 457.0}
    labelcoords {616.0 500.0}
    interface-peer {eth0 n3}
}

node n3 {
    type lanswitch
    network-config {
	hostname switch
	!
    }
    canvas c1
    iconcoords {615.0 350.0}
    labelcoords {618.0 334.0}
    interface-peer {e0 n2}
    interface-peer {e1 n1}
    interface-peer {e2 n4}
}

node n1 {
    type router
    model host
    network-config {
	hostname dns-server
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {750.0 351.0}
    labelcoords {798.0 361.0}
    interface-peer {eth0 n3}
    services {DefaultRoute SSH UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/etc/dnsmasq.d', '/etc/default', '/var/run/dnsmasq', '/tmp', )
	files=('/tmp/hosts', 'startdns.sh', '/etc/dnsmasq.d/dnsmasq.conf', )
	cmdup=('sh startdns.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/etc/dnsmasq.d/dnsmasq.conf
	custom-command /etc/dnsmasq.d/dnsmasq.conf
	config {
	port=53
	no-resolv
	interface=eth0
	no-hosts
	addn-hosts=/tmp/hosts
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:startdns.sh
	custom-command startdns.sh
	config {
	#!/bin/sh
	chmod 655 /var/run/dnsmasq
	/usr/sbin/dnsmasq -C /etc/dnsmasq.d/dnsmasq.conf
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/tmp/hosts
	custom-command /tmp/hosts
	config {
	# Include here the name resolution information
	
	
	}
    }
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	}
    }
    custom-config {
	custom-config-id service:SSH:/etc/ssh/sshd_config
	custom-command /etc/ssh/sshd_config
	config {
	# auto-generated by SSH service (utility.py)
	Port 22
	Protocol 2
	HostKey /etc/ssh/ssh_host_rsa_key
	UsePrivilegeSeparation yes
	PidFile /var/run/sshd/sshd.pid
	
	KeyRegenerationInterval 3600
	ServerKeyBits 768
	
	SyslogFacility AUTH
	LogLevel INFO
	
	LoginGraceTime 120
	PermitRootLogin yes
	StrictModes yes
	
	RSAAuthentication yes
	PubkeyAuthentication yes
	
	IgnoreRhosts yes
	RhostsRSAAuthentication no
	HostbasedAuthentication no
	
	PermitEmptyPasswords no
	ChallengeResponseAuthentication no
	
	X11Forwarding yes
	X11DisplayOffset 10
	PrintMotd no
	PrintLastLog yes
	TCPKeepAlive yes
	
	AcceptEnv LANG LC_*
	Subsystem sftp /usr/lib/openssh/sftp-server
	UsePAM yes
	UseDNS no
	
	}
    }
}

node n4 {
    type router
    model router
    network-config {
	hostname router1
	!
	interface eth2
	 ip address 10.0.3.2/24
	!
	interface eth1
	 ip address 10.0.1.2/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {455.0 351.0}
    labelcoords {455.0 383.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
    interface-peer {eth2 n6}
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/usr/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	}
    }
    services {IPForward}
}

node n5 {
    type router
    model router
    network-config {
	hostname router2
	!
	interface eth2
	 ip address 10.0.4.1/24
	!
	interface eth0
	 ip address 10.0.1.1/24
	!
    }
    canvas c1
    iconcoords {455.0 235.0}
    labelcoords {511.0 244.0}
    interface-peer {eth0 n4}
    interface-peer {eth2 n7}
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/usr/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	
	}
    }
    services {IPForward}
}

node n6 {
    type router
    model router
    network-config {
	hostname router3
	!
	interface eth2
	 ip address 10.0.5.1/24
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
    }
    canvas c1
    iconcoords {204.0 352.0}
    labelcoords {146.0 362.0}
    interface-peer {eth1 n4}
    interface-peer {eth2 n8}
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/usr/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
	/usr/sbin/sysctl -w net.ipv6.conf.default.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.forwarding=1
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.send_redirects=0
	/usr/sbin/sysctl -w net.ipv4.conf.eth2.rp_filter=0
	
	}
    }
    services {IPForward}
}

node n7 {
    type router
    model host
    network-config {
	hostname rtsp-server-1
	!
	interface eth0
	 ip address 10.0.4.10/24
	!
    }
    canvas c1
    iconcoords {456.0 125.0}
    labelcoords {457.0 100.0}
    interface-peer {eth0 n5}
}

node n8 {
    type router
    model host
    network-config {
	hostname rtsp-server-2
	!
	interface eth0
	 ip address 10.0.5.10/24
	!
    }
    canvas c1
    iconcoords {204.0 484.0}
    labelcoords {205.0 526.0}
    interface-peer {eth0 n6}
}

link l1 {
    nodes {n2 n3}
    bandwidth 0
}

link l2 {
    nodes {n3 n1}
    bandwidth 0
}

link l3 {
    nodes {n4 n3}
    bandwidth 0
}

link l4 {
    nodes {n5 n4}
    bandwidth 0
}

link l6 {
    nodes {n6 n4}
    bandwidth 0
}

link l7 {
    nodes {n7 n5}
    bandwidth 0
}

link l8 {
    nodes {n8 n6}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
    wallpaper-style {upperleft}
    wallpaper {}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

